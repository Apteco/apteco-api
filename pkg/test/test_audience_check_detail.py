# coding: utf-8

"""
    Apteco API

    An API to allow access to Apteco Marketing Suite resources  # noqa: E501

    The version of the OpenAPI document: v2
    Contact: support@apteco.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import apteco_api
from apteco_api.models.audience_check_detail import AudienceCheckDetail  # noqa: E501
from apteco_api.rest import ApiException

class TestAudienceCheckDetail(unittest.TestCase):
    """AudienceCheckDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AudienceCheckDetail
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = apteco_api.models.audience_check_detail.AudienceCheckDetail()  # noqa: E501
        if include_optional :
            return AudienceCheckDetail(
                audience_update_id = 56, 
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                fast_stats_build_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                user = apteco_api.models.user_display_details.UserDisplayDetails(
                    id = 56, 
                    username = '0', 
                    firstname = '0', 
                    surname = '0', 
                    email_address = '0', ), 
                nett_counts = [
                    apteco_api.models.count.Count(
                        table_name = '0', 
                        count_value = 56, )
                    ], 
                dimension_results = [
                    apteco_api.models.check_dimension_result.CheckDimensionResult(
                        id = '0', 
                        codes = '0', 
                        descriptions = '0', 
                        base_counts = '0', 
                        audience_counts = '0', )
                    ]
            )
        else :
            return AudienceCheckDetail(
                audience_update_id = 56,
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                fast_stats_build_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user = apteco_api.models.user_display_details.UserDisplayDetails(
                    id = 56, 
                    username = '0', 
                    firstname = '0', 
                    surname = '0', 
                    email_address = '0', ),
                nett_counts = [
                    apteco_api.models.count.Count(
                        table_name = '0', 
                        count_value = 56, )
                    ],
                dimension_results = [
                    apteco_api.models.check_dimension_result.CheckDimensionResult(
                        id = '0', 
                        codes = '0', 
                        descriptions = '0', 
                        base_counts = '0', 
                        audience_counts = '0', )
                    ],
        )

    def testAudienceCheckDetail(self):
        """Test AudienceCheckDetail"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
