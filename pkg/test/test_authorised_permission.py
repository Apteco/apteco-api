# coding: utf-8

"""
    Apteco API

    An API to allow access to Apteco Marketing Suite resources  # noqa: E501

    The version of the OpenAPI document: v2
    Contact: support@apteco.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import apteco_api
from apteco_api.models.authorised_permission import AuthorisedPermission  # noqa: E501
from apteco_api.rest import ApiException

class TestAuthorisedPermission(unittest.TestCase):
    """AuthorisedPermission unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AuthorisedPermission
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = apteco_api.models.authorised_permission.AuthorisedPermission()  # noqa: E501
        if include_optional :
            return AuthorisedPermission(
                id = 56, 
                permission = apteco_api.models.permission.permission(), 
                permission_type = 'Unknown', 
                resource = '0', 
                resource_type = 'Unknown', 
                grant = True, 
                deny = True, 
                inherit = True, 
                permission_set = apteco_api.models.permission_set.PermissionSet(
                    id = 56, 
                    name = '0', 
                    system_name = '0', 
                    system_permission_set = True, ), 
                authority = apteco_api.models.authority.Authority(
                    authority_id = 56, 
                    id = apteco_api.models.id.Id(
                        id_type = 'None', 
                        id_value = 56, ), ), 
                team = apteco_api.models.team_summary.TeamSummary(
                    id = 56, 
                    name = '0', )
            )
        else :
            return AuthorisedPermission(
                id = 56,
                permission_type = 'Unknown',
                resource_type = 'Unknown',
                grant = True,
                deny = True,
                inherit = True,
        )

    def testAuthorisedPermission(self):
        """Test AuthorisedPermission"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
