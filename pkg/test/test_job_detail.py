# coding: utf-8

"""
    Apteco API

    An API to allow access to Apteco Marketing Suite resources  # noqa: E501

    The version of the OpenAPI document: v2
    Contact: support@apteco.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import apteco_api
from apteco_api.models.job_detail import JobDetail  # noqa: E501
from apteco_api.rest import ApiException

class TestJobDetail(unittest.TestCase):
    """JobDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test JobDetail
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = apteco_api.models.job_detail.JobDetail()  # noqa: E501
        if include_optional :
            return JobDetail(
                request = '0', 
                results = '0', 
                id = 56, 
                priority = 56, 
                state = '0', 
                cancel_requested = True, 
                time_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                time_sent = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                time_finished = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                server = '0', 
                system_name = '0', 
                thread_number = 56, 
                username = '0', 
                job_type = '0'
            )
        else :
            return JobDetail(
                request = '0',
                results = '0',
                id = 56,
                priority = 56,
                state = '0',
                cancel_requested = True,
                server = '0',
                system_name = '0',
                thread_number = 56,
                username = '0',
                job_type = '0',
        )

    def testJobDetail(self):
        """Test JobDetail"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
