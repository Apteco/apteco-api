# coding: utf-8

"""
    Apteco API

    An API to allow access to Apteco Marketing Suite resources  # noqa: E501

    The version of the OpenAPI document: v2
    Contact: support@apteco.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import apteco_api
from apteco_api.models.dashboard_item_data_job_detail import DashboardItemDataJobDetail  # noqa: E501
from apteco_api.rest import ApiException

class TestDashboardItemDataJobDetail(unittest.TestCase):
    """DashboardItemDataJobDetail unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DashboardItemDataJobDetail
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = apteco_api.models.dashboard_item_data_job_detail.DashboardItemDataJobDetail()  # noqa: E501
        if include_optional :
            return DashboardItemDataJobDetail(
                dashboard_item_data = apteco_api.models.dashboard_item_data_result_detail.DashboardItemDataResultDetail(
                    dimension_results = [
                        apteco_api.models.dimension_result.DimensionResult(
                            id = '0', 
                            header_codes = '0', 
                            header_descriptions = '0', )
                        ], 
                    measure_results = [
                        apteco_api.models.measure_result.MeasureResult(
                            id = '0', 
                            rows = [
                                '0'
                                ], 
                            cells = [
                                '0'
                                ], )
                        ], 
                    messages = [
                        apteco_api.models.server_message.ServerMessage(
                            type = 'Error', 
                            number = 56, 
                            text = '0', )
                        ], ), 
                is_cancelled = True, 
                id = 56, 
                is_complete = True, 
                queue_position = 56, 
                progress = 56
            )
        else :
            return DashboardItemDataJobDetail(
                id = 56,
                is_complete = True,
        )

    def testDashboardItemDataJobDetail(self):
        """Test DashboardItemDataJobDetail"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
