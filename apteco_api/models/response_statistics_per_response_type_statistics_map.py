# coding: utf-8

"""
    Apteco API

    An API to allow access to Apteco Marketing Suite resources  # noqa: E501

    The version of the OpenAPI document: v2
    Contact: support@apteco.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class ResponseStatisticsPerResponseTypeStatisticsMap(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'twitter_retweet': 'PerResponseTypeStatistics',
        'broadcast_bounce': 'PerResponseTypeStatistics',
        'broadcast_delivered': 'PerResponseTypeStatistics',
        'facebook_like': 'PerResponseTypeStatistics',
        'broadcast_reply': 'PerResponseTypeStatistics',
        'broadcast_failed': 'PerResponseTypeStatistics',
        'broadcast_opt_in': 'PerResponseTypeStatistics',
        'facebook_comment': 'PerResponseTypeStatistics',
        'unknown': 'PerResponseTypeStatistics',
        'broadcast_opt_out': 'PerResponseTypeStatistics',
        'twitter_like': 'PerResponseTypeStatistics',
        'facebook_share': 'PerResponseTypeStatistics',
        'broadcast_click': 'PerResponseTypeStatistics',
        'facebook_link_click': 'PerResponseTypeStatistics',
        'broadcast_open': 'PerResponseTypeStatistics'
    }

    attribute_map = {
        'twitter_retweet': 'TwitterRetweet',
        'broadcast_bounce': 'BroadcastBounce',
        'broadcast_delivered': 'BroadcastDelivered',
        'facebook_like': 'FacebookLike',
        'broadcast_reply': 'BroadcastReply',
        'broadcast_failed': 'BroadcastFailed',
        'broadcast_opt_in': 'BroadcastOptIn',
        'facebook_comment': 'FacebookComment',
        'unknown': 'Unknown',
        'broadcast_opt_out': 'BroadcastOptOut',
        'twitter_like': 'TwitterLike',
        'facebook_share': 'FacebookShare',
        'broadcast_click': 'BroadcastClick',
        'facebook_link_click': 'FacebookLinkClick',
        'broadcast_open': 'BroadcastOpen'
    }

    def __init__(self, twitter_retweet=None, broadcast_bounce=None, broadcast_delivered=None, facebook_like=None, broadcast_reply=None, broadcast_failed=None, broadcast_opt_in=None, facebook_comment=None, unknown=None, broadcast_opt_out=None, twitter_like=None, facebook_share=None, broadcast_click=None, facebook_link_click=None, broadcast_open=None):  # noqa: E501
        """ResponseStatisticsPerResponseTypeStatisticsMap - a model defined in OpenAPI"""  # noqa: E501

        self._twitter_retweet = None
        self._broadcast_bounce = None
        self._broadcast_delivered = None
        self._facebook_like = None
        self._broadcast_reply = None
        self._broadcast_failed = None
        self._broadcast_opt_in = None
        self._facebook_comment = None
        self._unknown = None
        self._broadcast_opt_out = None
        self._twitter_like = None
        self._facebook_share = None
        self._broadcast_click = None
        self._facebook_link_click = None
        self._broadcast_open = None
        self.discriminator = None

        if twitter_retweet is not None:
            self.twitter_retweet = twitter_retweet
        if broadcast_bounce is not None:
            self.broadcast_bounce = broadcast_bounce
        if broadcast_delivered is not None:
            self.broadcast_delivered = broadcast_delivered
        if facebook_like is not None:
            self.facebook_like = facebook_like
        if broadcast_reply is not None:
            self.broadcast_reply = broadcast_reply
        if broadcast_failed is not None:
            self.broadcast_failed = broadcast_failed
        if broadcast_opt_in is not None:
            self.broadcast_opt_in = broadcast_opt_in
        if facebook_comment is not None:
            self.facebook_comment = facebook_comment
        if unknown is not None:
            self.unknown = unknown
        if broadcast_opt_out is not None:
            self.broadcast_opt_out = broadcast_opt_out
        if twitter_like is not None:
            self.twitter_like = twitter_like
        if facebook_share is not None:
            self.facebook_share = facebook_share
        if broadcast_click is not None:
            self.broadcast_click = broadcast_click
        if facebook_link_click is not None:
            self.facebook_link_click = facebook_link_click
        if broadcast_open is not None:
            self.broadcast_open = broadcast_open

    @property
    def twitter_retweet(self):
        """Gets the twitter_retweet of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The twitter_retweet of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._twitter_retweet

    @twitter_retweet.setter
    def twitter_retweet(self, twitter_retweet):
        """Sets the twitter_retweet of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param twitter_retweet: The twitter_retweet of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._twitter_retweet = twitter_retweet

    @property
    def broadcast_bounce(self):
        """Gets the broadcast_bounce of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The broadcast_bounce of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._broadcast_bounce

    @broadcast_bounce.setter
    def broadcast_bounce(self, broadcast_bounce):
        """Sets the broadcast_bounce of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param broadcast_bounce: The broadcast_bounce of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._broadcast_bounce = broadcast_bounce

    @property
    def broadcast_delivered(self):
        """Gets the broadcast_delivered of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The broadcast_delivered of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._broadcast_delivered

    @broadcast_delivered.setter
    def broadcast_delivered(self, broadcast_delivered):
        """Sets the broadcast_delivered of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param broadcast_delivered: The broadcast_delivered of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._broadcast_delivered = broadcast_delivered

    @property
    def facebook_like(self):
        """Gets the facebook_like of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The facebook_like of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._facebook_like

    @facebook_like.setter
    def facebook_like(self, facebook_like):
        """Sets the facebook_like of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param facebook_like: The facebook_like of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._facebook_like = facebook_like

    @property
    def broadcast_reply(self):
        """Gets the broadcast_reply of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The broadcast_reply of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._broadcast_reply

    @broadcast_reply.setter
    def broadcast_reply(self, broadcast_reply):
        """Sets the broadcast_reply of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param broadcast_reply: The broadcast_reply of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._broadcast_reply = broadcast_reply

    @property
    def broadcast_failed(self):
        """Gets the broadcast_failed of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The broadcast_failed of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._broadcast_failed

    @broadcast_failed.setter
    def broadcast_failed(self, broadcast_failed):
        """Sets the broadcast_failed of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param broadcast_failed: The broadcast_failed of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._broadcast_failed = broadcast_failed

    @property
    def broadcast_opt_in(self):
        """Gets the broadcast_opt_in of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The broadcast_opt_in of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._broadcast_opt_in

    @broadcast_opt_in.setter
    def broadcast_opt_in(self, broadcast_opt_in):
        """Sets the broadcast_opt_in of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param broadcast_opt_in: The broadcast_opt_in of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._broadcast_opt_in = broadcast_opt_in

    @property
    def facebook_comment(self):
        """Gets the facebook_comment of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The facebook_comment of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._facebook_comment

    @facebook_comment.setter
    def facebook_comment(self, facebook_comment):
        """Sets the facebook_comment of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param facebook_comment: The facebook_comment of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._facebook_comment = facebook_comment

    @property
    def unknown(self):
        """Gets the unknown of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The unknown of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._unknown

    @unknown.setter
    def unknown(self, unknown):
        """Sets the unknown of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param unknown: The unknown of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._unknown = unknown

    @property
    def broadcast_opt_out(self):
        """Gets the broadcast_opt_out of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The broadcast_opt_out of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._broadcast_opt_out

    @broadcast_opt_out.setter
    def broadcast_opt_out(self, broadcast_opt_out):
        """Sets the broadcast_opt_out of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param broadcast_opt_out: The broadcast_opt_out of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._broadcast_opt_out = broadcast_opt_out

    @property
    def twitter_like(self):
        """Gets the twitter_like of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The twitter_like of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._twitter_like

    @twitter_like.setter
    def twitter_like(self, twitter_like):
        """Sets the twitter_like of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param twitter_like: The twitter_like of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._twitter_like = twitter_like

    @property
    def facebook_share(self):
        """Gets the facebook_share of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The facebook_share of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._facebook_share

    @facebook_share.setter
    def facebook_share(self, facebook_share):
        """Sets the facebook_share of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param facebook_share: The facebook_share of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._facebook_share = facebook_share

    @property
    def broadcast_click(self):
        """Gets the broadcast_click of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The broadcast_click of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._broadcast_click

    @broadcast_click.setter
    def broadcast_click(self, broadcast_click):
        """Sets the broadcast_click of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param broadcast_click: The broadcast_click of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._broadcast_click = broadcast_click

    @property
    def facebook_link_click(self):
        """Gets the facebook_link_click of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The facebook_link_click of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._facebook_link_click

    @facebook_link_click.setter
    def facebook_link_click(self, facebook_link_click):
        """Sets the facebook_link_click of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param facebook_link_click: The facebook_link_click of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._facebook_link_click = facebook_link_click

    @property
    def broadcast_open(self):
        """Gets the broadcast_open of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501


        :return: The broadcast_open of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :rtype: PerResponseTypeStatistics
        """
        return self._broadcast_open

    @broadcast_open.setter
    def broadcast_open(self, broadcast_open):
        """Sets the broadcast_open of this ResponseStatisticsPerResponseTypeStatisticsMap.


        :param broadcast_open: The broadcast_open of this ResponseStatisticsPerResponseTypeStatisticsMap.  # noqa: E501
        :type: PerResponseTypeStatistics
        """

        self._broadcast_open = broadcast_open

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ResponseStatisticsPerResponseTypeStatisticsMap):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
